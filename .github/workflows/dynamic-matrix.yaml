
name: Dynamic Matrix Workflow
on:
  workflow_dispatch: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      imagematrix: ${{ steps.allimages.outputs.images }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: kubecost/cost-analyzer-helm-chart
          ref: develop

      - name: Extract all images
        id: allimages
        run: |
          TARGETS=$(helm template cost-analyzer/ \
            --set global.thanos.enabled=true \
            --set global.prometheus.enabled=true \
            --set global.grafana.enabled=true \
            --set networkCosts.enabled=true | \
            yq e -o json - | \
            jq -r '.. | .image? | select(.)' | \
            jq -R -s -c 'split("\n")[:-1]' | \
            jq -c 'unique')
          echo "Discovered image targets are: $TARGETS"
          echo "images=$(jq -cn --argjson environments "$TARGETS" '{target: $environments}')" >> $GITHUB_OUTPUT

  scan:
    needs: setup        
    runs-on: ubuntu-latest
    # continue-on-error: true
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.imagematrix) }}
    steps:
      - name: Run Trivy vulnerability scanner
        if: always()
        uses: aquasecurity/trivy-action@2b6a709cf9c4025c5438138008beaddbb02086f0 # v0.14.0
        with:
          image-ref: ${{matrix.target}}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH