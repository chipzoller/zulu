name: Image vulnerability scans

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      imagematrix: ${{ steps.allimages.outputs.images }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: kubecost/cost-analyzer-helm-chart
          ref: develop

      - name: Extract all images
        id: allimages
        run: |
          TARGETS=$(helm template cost-analyzer/ \
            --set global.thanos.enabled=true \
            --set global.prometheus.enabled=true \
            --set global.grafana.enabled=true \
            --set networkCosts.enabled=true \
            --set clusterController.enabled=true | \
            yq e -o json - | \
            jq -r '.. | .image? | select(.)' | \
            jq -R -s -c 'split("\n")[:-1]' | \
            jq -c 'unique')
          echo "Discovered image targets are: $TARGETS"
          echo "images=$(jq -cn --argjson environments "$TARGETS" '{target: $environments}')" >> $GITHUB_OUTPUT

  scan:
    needs: setup        
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # matrix: ${{ fromJson(needs.setup.outputs.imagematrix) }}
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: docker.io/busybox:latest # ${{matrix.target}}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  notify:
    needs: [scan, setup]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Slack notify
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "workflow": "${{github.workflow}}",
              "repo": "${{github.repository}}",
              "runid": "${{github.run_id}}",
              "message": "One or more images contain high or critical vulnerabilities."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
